type BrokerCompany {
    id: ID!
    name: String! @search(by: [exact])
    address: String
    workers: [BrokerWorker] @hasInverse(field: company)
    brokering: Brokering
    reviews: [Review] @hasInverse(field: revieweeBrokerCompany)
    website: String
    email: String
    phone: String
    facebook: String
    linkedin: String
    twitter: String
}

type BrokerWorker {
    id: ID!
    name: String! @search(by: [exact])
    role: String!
    status: String
    company: BrokerCompany
    reviews: [Review] @hasInverse(field: revieweeBrokerWorker)
    reviewsLeft: [Review] @hasInverse(field: reviewerBrokerWorker)
    email: String
    phone: String
    isCustomerFacing: Boolean @search
}

type Brokering {
    id: ID!
    name: String! @search(by: [exact])
    companies: [BrokerCompany]
}

type Review {
    id: ID!
    comment: String
    
    rating: Float!
    communication: Float
    reliability: Float
    professionalism: Float
    
    timestamp: DateTime!
    
    reviewerBrokerWorker: BrokerWorker @hasInverse(field: reviewsLeft)
    reviewerTruckingWorker: TruckingWorker @hasInverse(field: reviewsLeft)
    
    revieweeBrokerCompany: BrokerCompany @hasInverse(field: reviews)
    revieweeBrokerWorker: BrokerWorker @hasInverse(field: reviews)
    
    revieweeTruckingWorker: TruckingWorker @hasInverse(field: reviews)
    revieweeTruckingCompany: TruckingCompany @hasInverse(field: reviews)
}

type TruckingCompany {
   id: ID!
   name: String! @search(by: [exact])
   address: String
   workers: [TruckingWorker] @hasInverse(field: company)
   reviews: [Review] @hasInverse(field: revieweeTruckingCompany)
   website: String
   email: String
   phone: String
   facebook: String
   linkedin: String
   twitter: String
}

type TruckingWorker {
    id: ID!
    name: String! @search(by: [exact])
    role: String!
    company: TruckingCompany!
    currentCity: String
    status: String
    reviews: [Review] @hasInverse(field: revieweeTruckingWorker)
    reviewsLeft: [Review] @hasInverse(field: reviewerTruckingWorker)
    email: String
    phone: String
    isCustomerFacing: Boolean @search
}

type TruckingCategory {
    id: ID!
    name: String! @search(by: [exact])
    companies: [TruckingCompany]
}

type Trucking {
   id: ID!
   name: String! @search(by: [exact])
   categories: [TruckingCategory]
}